# Copyright 2024 Gennaro Gambardella.
# This is used to build the honey_tool slim release docker image.
# It can also be used to build local images, especially if you've made changes
# to the code.
# Example command:
# $ git clone https://github.com/gambalab/honey_pipes
# $ cd honey_pipes
# $ sudo docker build -f ./Dockerfile_slim -t honey_pipes_slim .

# Stage miniconda envs
FROM continuumio/miniconda3 AS conda_setup

# create bio tools conda env
RUN conda config --add channels defaults && \
    conda config --add channels bioconda && \
    conda config --add channels conda-forge

RUN conda create -y -n bio \
                    bioconda::bcftools=1.20 \
                    bioconda::samtools=1.20 \
                    bioconda::tabix=0.2.6 \
                    bioconda::sambamba=1.0.1 \
		            bioconda::bbmap=39.06 \
                    bioconda::bedtools=2.31.1 \
                    && conda clean -a

# create pod5 conda env
RUN conda create -y -n pod5 \
    && conda init \
    && . ~/.bashrc \
    && conda activate pod5 \
    && conda install -y pip \
    && pip install pod5 \
    && conda deactivate \
    && conda clean -a

# create dysgu conda env
RUN conda create -y -n dysgu \
                    bioconda::dysgu=1.6.6

# create svisionenv conda env
RUN wget -qO- https://github.com/xjtu-omics/SVision/archive/refs/tags/v1.4.tar.gz | tar -xvz -C /opt
WORKDIR /opt/SVision-1.4
COPY ./useful/svision_environment.yml /opt/SVision-1.4/environment.yml
RUN conda env create -y -f environment.yml \
        && conda init \
        && . ~/.bashrc \
        && conda activate svisionenv \
        && python setup.py install \
        && conda deactivate \
        && conda clean -a
RUN rm -rf /opt/SVision-1.4

# Stage ubuntu base
FROM ubuntu:24.04 AS base

COPY --from=conda_setup /opt/conda /opt/conda

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        wget \
        build-essential \
        libboost-all-dev \
        libgtest-dev && \
        apt-get autoremove && \
        apt-get clean && \
    rm -rf /var/lib/apt/lists

# Copying DRAGMAP source code and build
COPY ./DRAGMAP /opt/dragmap_src
ENV HAS_GTEST=0
ENV STATIC=1
WORKDIR /opt/dragmap_src
RUN make -j4

# Copying minimap2 source code and build
COPY ./minimap2 /opt/minimap_src
WORKDIR /opt/minimap_src
RUN make -j4

# Copy bin files
WORKDIR /opt/bin
COPY ./scripts/*.sh .
RUN cp /opt/dragmap_src/build/release/dragen-os .
RUN cp /opt/dragmap_src/build/release/compare .
RUN cp /opt/minimap_src/minimap2 .
RUN wget --no-check-certificate https://github.com/brentp/mosdepth/releases/download/v0.3.8/mosdepth_d4
RUN chmod +x /opt/bin/*

# clea files
RUN rm -rf /opt/minimap_src /opt/dragmap_src/

ENV PATH="${PATH}":/opt/conda/bin:/opt/conda/envs/bio/bin:/opt/conda/envs/dysgu/bin:/opt/conda/envs/svisionenv/bin:/opt/conda/envs/pod5/bin:/opt/bin
